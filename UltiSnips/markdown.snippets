# markdown snippets
#

snippet cus "Custom-style" b
::: {custom-style="$1"}
$2
:::

$0
endsnippet

snippet code "code block" b
\`\`\`$1
$2
\`\`\`
$0
endsnippet

snippet perl6 "code block" b
\`\`\`perl6
$1
\`\`\`
$0
endsnippet

snippet raku "code block" b
\`\`\`raku
$1
\`\`\`
$0
endsnippet

snippet head "Header" b
---
title: "`!p snip.rv = snip.basename`"
author: "罗伟"
date: `date +%Y-%m-%d`
# bibliography: "`!p snip.rv = snip.basename`.bib"
output:
	pdf_document:
		includes:
			in_header:
				- "/home/liubianshi/useScript/header.tex"
				- "/home/liubianshi/useScript/code.tex"
		latex_engine: xelatex
		pandoc_args: 
			- "--listings"
	word_document: 
		pandoc_args: ["--from=markdown+east_asian_line_breaks"]
	html_document: 
		css: ~/useScript/vue.css
---
endsnippet

snippet ] "inline code"
`${1:${VISUAL}}`$0
endsnippet


snippet work_abac "ABAC Template"
# ${1}

| 文件编号：$2
| 提交方：$3

## 提案简介

$0

## 中方立场建议

endsnippet


# 自动输入中文标点符号
snippet "(?<![A-z0-9\)\"\'];)([,.!:;\\?\[\]])\ " "修正标点符号" r
`!p
def E_trans_to_C(string):
	E_pun = u'-^,.!?[]()<>"\';\\:'
	C_pun = u'—…，。！？【】（）《》“‘；、：'
	table= {ord(f):ord(t) for f,t in zip(E_pun,C_pun)}
	return string.translate(table)
snip.rv = E_trans_to_C(match.group(1))`
endsnippet

snippet callout "Obsidian Callout" b
> [!NOTE] $0
endsnippet
